// simple_device.dml - Skeleton code to base new DML device modules on

dml 1.2;

device simple_device;

//import "simics/devs/signal.dml";
import "talk.dml";

parameter desc = "name of device";
parameter documentation = "Longer description that will appear in the help";

import "utility.dml";

// USER-TODO: add connect definitions here, if needed
connect connect2 {
    interface talk {
        parameter required = true;
    }
}

// USER-TODO: add attribute definitions here, if needed

// Basic bank declaration
bank regs {
     register counter size 4 @ 0x0000 {
        method read() -> (value) {
	    $connect2.talk.hello();
            log "info": "read from counter";
            value = 42;
        }
    }
}

// USER-TODO: add implement and port declarations here, if needed
/*implement signal {
    method signal_raise() {
        $raised += 1;
        log "info": "Signal raised to %u", $raised;
        if ($raised == 0)
            log "error": "Too many raises (counter wraparound)";
    }
    method signal_lower() {
        if ($raised == 0)
            log "error": "Too many lowers (counter wraparound)";
        $raised -= 1;
        if ($raised == 0)
            log "info": "Signal cleared";
        else
            log "info": "Signal lowered to %u", $raised;
    }
}*/
// USER-TODO: add event declarations here, if needed

// USER-TODO: add common methods here, if needed

// USER-TODO: add templates here, if needed

// USER-TODO: Add init() and post_init() methods here, if needed.
// init() will be run to set the empty state of the model, before any
// configuration or checkpointed attributes are set.  post_init() is run after
// all configuration attributes have been set.  This happens both when the
// initial configuration is set and when the configuration is loaded from a
// checkpoint.
